plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id + "-" + minecraft_version
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: mapping_channel, version: mapping_version
    copyIdeResources = true
    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            workingDirectory project.file('run-data')
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://cursemaven.com"
    }
    maven {
        url = "https://api.modrinth.com/maven"
    }
    maven {
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"

    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:15.20.0.106")
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:15.20.0.106")

    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge:15.20.0.106")
    runtimeOnly fg.deobf("curse.maven:kubejs-238086:5853326")
    runtimeOnly fg.deobf("curse.maven:architectury-api-419699:5137938")
    runtimeOnly fg.deobf("curse.maven:rhino-416294:6186971")
    runtimeOnly fg.deobf("curse.maven:ars-nouveau-401955:6688854")
    runtimeOnly fg.deobf("curse.maven:ars-elemental-561470:6390889")
    runtimeOnly fg.deobf("curse.maven:curios-309927:6418456")

    implementation fg.deobf("curse.maven:enchanted-witchcraft-560363:6638514")
    implementation fg.deobf("curse.maven:geckolib-388172:6622543")
    implementation fg.deobf("curse.maven:smartbrainlib-661293:5654964")
    implementation fg.deobf("curse.maven:stateobserver-701213:5983132")
    implementation fg.deobf("curse.maven:patchouli-306770:6164575")
    implementation fg.deobf("curse.maven:agricraft-225635:5899444")
    implementation fg.deobf("curse.maven:resourceful-config-714059:6231176")
    implementation fg.deobf("curse.maven:natures-aura-306626:4963590")
    implementation fg.deobf("curse.maven:complicated-bees-1100137:6672873")
    implementation fg.deobf("curse.maven:gravestone-mod-238551:5794082")
}

mixin {
    add sourceSets.main, 'mixins.reclamation_util.refmap.json'
    config 'mixins.reclamation_util.json'

    debug.verbose = true
    debug.export = true
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version   : minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version       : forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id              : mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors         : mod_authors, mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1', // We are version 1 of ourselves
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    finalizedBy 'reobfJar'
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
